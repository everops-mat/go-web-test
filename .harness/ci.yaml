pipeline:
  name: ci
  identifier: ci
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1742571287290
        repoName: everops-mat/go-web-test
        build: <+input>
  stages:
    - stage:
        name: build-docker-image
        identifier: builddockerimage
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      echo "Hello, World!"
                      ls
                      env
                      go version
                      git symbolic-ref --short HEAD
              - step:
                  type: Run
                  name: run unit tests
                  identifier: run_unit_tests
                  spec:
                    shell: Sh
                    command: |-
                      export PATH=$(go env GOPATH)/bin:$PATH
                      go install golang.org/dl/go1.23@latest
                      go1.23 download
                      go1.23 test -v -tags=unit ./...
              - parallel:
                  - step:
                      type: Semgrep
                      name: Semgrep_1
                      identifier: Semgrep_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: BuildAndPushDockerRegistry_1
                      identifier: BuildAndPushDockerRegistry_1
                      spec:
                        connectorRef: account.harnessImage
                        repo: testme
                        tags:
                          - last
                        envVariables:
                          PLUGIN_DRY_RUN: "true"
              - parallel:
                  - step:
                      type: Owasp
                      name: Owasp_1
                      identifier: Owasp_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
                  - step:
                      type: OsvScanner
                      name: OsvScanner_1
                      identifier: OsvScanner_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
              - step:
                  type: Gitleaks
                  name: Gitleaks_1
                  identifier: Gitleaks_1
                  spec:
                    target:
                      detection: auto
                      type: repository
                    advanced:
                      log:
                        level: info
                      args: {}
                    mode: orchestration
                    config: default
